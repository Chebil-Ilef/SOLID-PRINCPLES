@startuml
class SensingDoor {
- boolean _locked
- boolean _opened
+ void lock()
+ void unlock()
+ void open()
+ void close()
+ void timeOutCallback()
+ void proximityCallback()
}

class TimedDoor {
- {static} int TIME_OUT
- boolean _locked
- boolean _opened
+ void lock()
+ void unlock()
+ void open()
+ void close()
+ void timeOutCallback()
+ void proximityCallback()
}
interface Door {
~ void lock()
~ void unlock()
~ void open()
~ void close()
}
interface ISensingDoor {
~ void proximityCallback()
}
interface ITimedDoor {
~ void timeOutCallback()
}

class Timer {
+ void register(long,ITimedDoor)
}

class Sensor {
+ void register(ISensingDoor)
- boolean isPersonClose()
}


Door <|.. TimedDoor
ITimedDoor <|.. TimedDoor
Door <|.. SensingDoor
ISensingDoor <|.. SensingDoor

Timer ..> ITimedDoor : uses
Sensor ..> ISensingDoor : uses
@enduml